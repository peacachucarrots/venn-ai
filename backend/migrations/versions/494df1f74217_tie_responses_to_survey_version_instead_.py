"""tie responses to survey_version instead of survey

Revision ID: 494df1f74217
Revises: 00a0bd67a45d
Create Date: 2025-07-31 04:09:05.053747

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '494df1f74217'
down_revision = '00a0bd67a45d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "responses",
        sa.Column("survey_version_id", sa.UUID(), nullable=True)
    )

    op.execute(
        """
        UPDATE responses r
        SET survey_version_id = v.survey_version_id
        FROM survey_versions v
        WHERE v.survey_id = r.survey_id AND v.is_active
        """
    )

    with op.batch_alter_table('responses', schema=None) as batch_op:
        batch_op.alter_column(sa.Column('survey_version_id', nullable=False))
        batch_op.drop_constraint(batch_op.f('responses_survey_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key("responses_survey_version_id_fkey", 'survey_versions', ['survey_version_id'], ['survey_version_id'], ondelete="CASCADE")
        batch_op.drop_column('survey_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('responses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('survey_id', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.drop_constraint("responses_survey_version_id_fkey", type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('responses_survey_id_fkey'), 'surveys', ['survey_id'], ['survey_id'])
        batch_op.drop_column('survey_version_id')

    # ### end Alembic commands ###
