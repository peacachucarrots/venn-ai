"""Added option sets for matrix style questions

Revision ID: fbb22a908acd
Revises: 2620caab9814
Create Date: 2025-07-23 03:36:08.488044

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fbb22a908acd'
down_revision = '2620caab9814'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'option_sets',
        sa.Column('option_set_id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('option_set_id')
    )
    op.create_table(
        'question_options',
        sa.Column('question_id', sa.UUID(), nullable=False),
        sa.Column('option_id',   sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(['option_id'],   ['options.option_id']),
        sa.ForeignKeyConstraint(['question_id'], ['questions.question_id']),
        sa.PrimaryKeyConstraint('question_id', 'option_id')
    )

    with op.batch_alter_table('options', schema=None) as batch_op:
        batch_op.add_column(sa.Column('option_set_id', sa.UUID(), nullable=True))
        batch_op.create_foreign_key(
            None, 'option_sets',
            ['option_set_id'], ['option_set_id']
        )

    # ─── STEP A: create the question_types enum ─────────────────────────────
    question_types = sa.Enum('mcq', 'matrix', 'contact', name='question_types')
    question_types.create(op.get_bind(), checkfirst=True)

    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('option_set_id', sa.UUID(), nullable=True))
        batch_op.create_foreign_key(
            None, 'option_sets',
            ['option_set_id'], ['option_set_id']
        )

        # ─── STEP B: add question_type with a server_default, then drop it ────
        batch_op.add_column(sa.Column(
            'question_type',
            question_types,
            nullable=False,
            server_default='mcq'      # set existing rows to 'mcq'
        ))
        batch_op.alter_column(
            'question_type',
            server_default=None      # remove default for future INSERTs
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('question_type')
        batch_op.drop_column('option_set_id')

    # ─── Drop the enum type ────────────────────────────────────────────────
    question_types = sa.Enum(name='question_types')
    question_types.drop(op.get_bind(), checkfirst=True)

    with op.batch_alter_table('options', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('option_set_id')

    op.drop_table('question_options')
    op.drop_table('option_sets')
    # ### end Alembic commands ###